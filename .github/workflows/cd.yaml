# tool/.github/workflows/cd.yaml
name: Deploy via ArgoCD

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      argocd_server:
        required: true
        type: string
      argocd_port:
        required: false
        type: string
        default: "9092"
      argocd_username:
        required: false
        type: string
        default: "admin"
      image_tag:
        required: false
        type: string
    secrets:
      argocd_password:
        required: true
      repo_token:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
      - name: Download argocd CLI
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/argocd

      - name: ArgoCD Login
        run: |
          argocd login ${{ inputs.argocd_server }}:${{ inputs.argocd_port }} \
            --insecure \
            --grpc-web \
            --username ${{ inputs.argocd_username }} \
            --password ${{ secrets.argocd_password }}
        shell: bash

      - name: Add repository credentials
        run: |
          echo "Adding repository credentials..."
          argocd repo add https://github.com/uday-platform-idp-org/${{ inputs.app_name }} \
            --username ${{ github.actor }} \
            --password ${{ secrets.repo_token }} \
            --insecure-skip-server-verification || echo "Repository already exists or failed to add"
        shell: bash

      - name: List repositories
        run: |
          echo "Listing all repositories in ArgoCD..."
          argocd repo list
        shell: bash

      - name: Test repository connection
        run: |
          echo "Testing repository connection..."
          argocd repo get https://github.com/uday-platform-idp-org/${{ inputs.app_name }} || echo "Failed to get repo details"
        shell: bash

      - name: List applications
        run: |
          echo "Listing all applications..."
          argocd app list
        shell: bash

      - name: Create application if not exists
        run: |
          if ! argocd app get ${{ inputs.app_name }} >/dev/null 2>&1; then
            echo "Application ${{ inputs.app_name }} not found. Creating..."
            
            echo "Trying to create application with correct path..."
            argocd app create ${{ inputs.app_name }} \
              --repo https://github.com/uday-platform-idp-org/${{ inputs.app_name }} \
              --path helm-charts/uday-app \
              --dest-server https://kubernetes.default.svc \
              --dest-namespace uday-app \
              --helm-set app.image=udaytc/${{ inputs.app_name }} \
              --helm-set app.tag=v8 \
              --sync-policy none
              
            echo "Application created successfully"
          else
            echo "Application ${{ inputs.app_name }} already exists"
          fi
        shell: bash

      - name: Checkout repository
        run: |
          git clone https://${{ github.actor }}:${{ secrets.repo_token }}@github.com/uday-platform-idp-org/${{ inputs.app_name }}.git .
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
        shell: bash

      - name: Update image tag in values.yaml
        run: |
          echo "Debug: image_tag input = '${{ inputs.image_tag }}'"
          
          if [ -n "${{ inputs.image_tag }}" ]; then
            echo "Updating tag from v8 to: ${{ inputs.image_tag }} in values.yaml"
            
            # Verificar se o arquivo existe
            ls -la helm-charts/uday-app/
            echo "Current content of values.yaml:"
            cat helm-charts/uday-app/values.yaml
            
            # Backup do arquivo original
            cp helm-charts/uday-app/values.yaml helm-charts/uday-app/values.yaml.bak
            
            # Atualizar a tag no values.yaml
            echo "Running sed command..."
            sed -i "s/tag: .*/tag: ${{ inputs.image_tag }}/" helm-charts/uday-app/values.yaml
            
            echo "Content after sed:"
            cat helm-charts/uday-app/values.yaml
            
            # Verificar se houve mudança
            if ! diff helm-charts/uday-app/values.yaml.bak helm-charts/uday-app/values.yaml >/dev/null; then
              echo "File changed, committing..."
              
              # Mostrar a diferença
              echo "Changes made:"
              diff helm-charts/uday-app/values.yaml.bak helm-charts/uday-app/values.yaml || true
              
              # Verificar status do git
              git status
              
              # Commit e push das mudanças
              git add helm-charts/uday-app/values.yaml
              git commit -m "Update image tag to ${{ inputs.image_tag }}"
              git push
              
              echo "values.yaml updated successfully"
            else
              echo "No changes detected in the file"
            fi
          else
            echo "No image tag provided, keeping default in values.yaml"
          fi
        shell: bash

      - name: Sync and Wait
        run: |
          argocd app sync ${{ inputs.app_name }}
          argocd app wait ${{ inputs.app_name }} --timeout 180
        shell: bash