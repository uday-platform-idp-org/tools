# tool/.github/workflows/cd.yaml
name: Deploy via ArgoCD

on:
  workflow_call:
    inputs:
      app_name:
        required: true
        type: string
      argocd_server:
        required: true
        type: string
      argocd_port:
        required: false
        type: string
        default: "9092"
      argocd_username:
        required: false
        type: string
        default: "admin"
      image_tag:
        required: false
        type: string
    secrets:
      argocd_password:
        required: true
      repo_token:
        required: true

jobs:
  deploy:
    runs-on: ubuntu-latest  # Mude de ubuntu-latest para self-hosted
    
    steps:
      - name: Download argocd CLI
        run: |
          curl -sSL -o argocd https://github.com/argoproj/argo-cd/releases/latest/download/argocd-linux-amd64
          chmod +x argocd
          sudo mv argocd /usr/local/bin/argocd

      - name: ArgoCD Login
        run: |
          argocd login ${{ inputs.argocd_server }}:${{ inputs.argocd_port }} \
            --insecure \
            --grpc-web \
            --username ${{ inputs.argocd_username }} \
            --password ${{ secrets.argocd_password }}
        shell: bash

      - name: Add repository credentials
        run: |
          echo "Adding repository credentials..."
          argocd repo add https://github.com/uday-platform-idp-org/${{ inputs.app_name }} \
            --username ${{ github.actor }} \
            --password ${{ secrets.repo_token }} \
            --insecure-skip-server-verification || echo "Repository already exists or failed to add"
        shell: bash

      - name: List repositories
        run: |
          echo "Listing all repositories in ArgoCD..."
          argocd repo list
        shell: bash

      - name: Test repository connection
        run: |
          echo "Testing repository connection..."
          argocd repo get https://github.com/uday-platform-idp-org/${{ inputs.app_name }} || echo "Failed to get repo details"
        shell: bash

      - name: List applications
        run: |
          echo "Listing all applications..."
          argocd app list
        shell: bash

      - name: Create application if not exists
        run: |
          if ! argocd app get ${{ inputs.app_name }} >/dev/null 2>&1; then
            echo "Application ${{ inputs.app_name }} not found. Creating..."
            
            # Usando o path correto: helm-charts/uday-app
            echo "Trying to create application with correct path..."
            argocd app create ${{ inputs.app_name }} \
              --repo https://github.com/uday-platform-idp-org/${{ inputs.app_name }} \
              --path helm-charts/uday-app \
              --dest-server https://kubernetes.default.svc \
              --dest-namespace uday-app \
              --helm-set app.image=udaytc/${{ inputs.app_name }}:v8 \
              --sync-policy none
              
            echo "Application created successfully"
          else
            echo "Application ${{ inputs.app_name }} already exists"
          fi
        shell: bash

      - name: Update image tag if provided
        run: |
          if [ -n "${{ inputs.image_tag }}" ]; then
            echo "Updating image from v8 to: udaytc/${{ inputs.app_name }}:${{ inputs.image_tag }}"
            argocd app set ${{ inputs.app_name }} \
              --helm-set app.image=udaytc/${{ inputs.app_name }}:${{ inputs.image_tag }}
            
            echo "Verifying the change..."
            argocd app get ${{ inputs.app_name }} -o yaml | grep "image:" || echo "Could not find image in app config"
          else
            echo "No image tag provided, using default from values.yaml (v8)"
          fi
        shell: bash

      - name: Sync and Wait
        run: |
          argocd app sync ${{ inputs.app_name }}
          argocd app wait ${{ inputs.app_name }} --timeout 180
        shell: bash